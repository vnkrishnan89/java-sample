AWSTemplateFormatVersion: '2010-09-09'
Description: container on ECS
Resources:
  Task:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: javasample
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - EC2
      ExecutionRoleArn: !ImportValue 'ECSTaskExecutionRole'
      ContainerDefinitions:
        - Name: javasample
          Image: 743550917294.dkr.ecr.us-east-1.amazonaws.com/javasample:latest
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'javasamplelogs'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'javasample'
  ListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'  
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: javasample-tg
      VpcId: !ImportValue VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-209
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip
  Service:
    Type: 'AWS::ECS::Service'
    DependsOn: ListenerRule
    Properties:
      ServiceName: javasample-service
      TaskDefinition: !Ref Task
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: EC2
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          Assign PublicIp: ENABLED
          Subnets:
            - !ImportValue Subnet1
            - !ImportValue Subnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: javasample
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup
Outputs:
  Endpoint:
    Description: javasample endpoint
    Value: !Join ['',['http://', !ImportValue DomainName, 'webappRunnerSample']]
    Export:
      Name: 'JavaSampleEndpoint'


